<dec f='MOS/lib/include/lib/structures/hashmap.h' l='29' type='void hashmap_deinit(hashmap_t * map)'/>
<use f='MOS/kernel/tasks/process.c' l='91' u='c' c='process_cleanup'/>
<use f='MOS/kernel/tasks/thread.c' l='55' u='c' c='thread_deinit'/>
<def f='MOS/lib/structures/hashmap.c' l='43' ll='57' type='void hashmap_deinit(hashmap_t * map)'/>
<doc f='MOS/lib/structures/hashmap.c' l='35'>/**
 * @brief Deinitialize a hashmap.
 * @pre The hashmap must be initialized.
 * @pre The hashmap should be empty, otherwise the entries will be leaked.
 * @warning This function does not free the hashmap itself, nor does it free the keys or values, but only the internal data structures.
 *
 * @param map The hashmap to deinitialize.
 */</doc>
<use f='MOS/tests/hashmap/test_hashmap.c' l='20' u='c' c='hashmap_init_simple_macro'/>
<use f='MOS/tests/hashmap/test_hashmap.c' l='37' u='c' c='hashmap_put_single'/>
<use f='MOS/tests/hashmap/test_hashmap.c' l='63' u='c' c='hashmap_get_function'/>
<use f='MOS/tests/hashmap/test_hashmap.c' l='100' u='c' c='hashmap_put_multiple'/>
<use f='MOS/tests/hashmap/test_hashmap.c' l='132' u='c' c='hashmap_put_overflow'/>
<use f='MOS/tests/hashmap/test_hashmap.c' l='163' u='c' c='hashmap_remove_function'/>
<use f='MOS/tests/hashmap/test_hashmap.c' l='212' u='c' c='hashmap_foreach_function'/>
