<dec f='MOS/kernel/include/mos/mm/paging/paging.h' l='49' type='vmblock_t mm_get_free_pages(paging_handle_t table, size_t npages, pgalloc_hints hints)'/>
<doc f='MOS/kernel/include/mos/mm/paging/paging.h' l='32'>/**
 * @brief Gets npages unmapped free pages from a page table.
 *
 * @param table The page table to allocate from.
 * @param npages The number of pages to allocate.
 * @param hints Allocation hints, see @ref pgalloc_hints.
 * @return vmblock_t The determined block of virtual memory.
 *
 * @note This function neither allocates nor maps the pages, it only
 * determines the block of virtual memory that can be used to allocate
 * and map the pages.
 *
 * @note The returned @ref vmblock_t only contains the virtual address
 * and the number of pages, it does not contain any physical addresses,
 * nor the flags of the pages.
 */</doc>
<use f='MOS/kernel/mm/memops.c' l='70' u='c' c='mm_alloc_zeroed_pages'/>
<use f='MOS/kernel/mm/memops.c' l='118' u='c' c='mm_map_proxy_space'/>
<def f='MOS/kernel/mm/paging/paging.c' l='62' ll='95' type='vmblock_t mm_get_free_pages(paging_handle_t table, size_t n_pages, pgalloc_hints hints)'/>
<use f='MOS/kernel/mm/paging/paging.c' l='99' u='c' c='mm_alloc_pages'/>
<use f='MOS/kernel/mm/shm.c' l='28' u='c' c='shm_map_shared_block'/>
