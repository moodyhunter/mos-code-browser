<dec f='MOS/kernel/include/mos/mm/paging/paging.h' l='86' type='void mm_free_pages(paging_handle_t table, vmblock_t block)'/>
<doc f='MOS/kernel/include/mos/mm/paging/paging.h' l='77'>/**
 * @brief Free a block of virtual memory, and return the corresponding physical memory to the allocator.
 *
 * @param table The page table to free from.
 * @param block The block of memory to free.
 *
 * @details This function unmaps and frees the pages in the block, it returns the corresponding physical memory
 * back to the allocator.
 */</doc>
<use f='MOS/kernel/elf/elf.c' l='233' u='c' c='elf_create_process'/>
<use f='MOS/kernel/mm/memops.c' l='64' u='c' c='liballoc_free_page'/>
<def f='MOS/kernel/mm/paging/paging.c' l='113' ll='117' type='void mm_free_pages(paging_handle_t table, vmblock_t block)'/>
<use f='MOS/kernel/tasks/process.c' l='226' u='c' c='process_handle_cleanup'/>
<use f='MOS/kernel/tasks/process.c' l='259' u='c' c='process_grow_heap'/>
